# improve colors
set -g default-terminal 'screen-256color'

# act like vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

set -g prefix2 C-s

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

# prefix -> back-one-character
bind-key C-b send-prefix
# prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

# don't suspend-client
unbind-key C-z

# enable mouse support
set-window-option -g mouse on

# reduce excape time
set -s escape-time 0

# from <https://github.com/christoomey/vim-tmux-navigator>
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# restore overwritten C-l binding (clear screen)
bind C-l send-keys 'C-l'

# tpm plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# ===== tmux-yank =====
# variables
copy_action='copy-pipe-and-cancel'
copy_dest='clipboard'

# tmux-yank config
set -g @yank_action "$copy_action"
set -g @yank_selection "$copy_dest"
set -g @yank_selection_mouse "$copy_dest"

# map missing double and triple click copy
copy_cmd="xclip -sel $copy_dest -i"
paste_cmd="xclip -sel $copy_dest -o"

copy_word_cmd="select-pane; send-keys -X select-word; run-shell -d 0.3; send-keys -X $copy_action \"$copy_cmd\""
copy_line_cmd="select-pane; send-keys -X select-line; run-shell -d 0.3; send-keys -X $copy_action \"$copy_cmd\""
n_copy_word_cmd="select-pane; copy-mode -M; send-keys -X select-word; run-shell -d 0.3; send-keys -X $copy_action \"$copy_cmd\""
n_copy_line_cmd="select-pane; copy-mode -M; send-keys -X select-line; run-shell -d 0.3; send-keys -X $copy_action \"$copy_cmd\""

bind -T copy-mode    DoubleClick1Pane "$copy_word_cmd"
bind -T copy-mode-vi DoubleClick1Pane "$copy_word_cmd"
bind -n              DoubleClick1Pane "$n_copy_word_cmd"
bind -T copy-mode    TripleClick1Pane "$copy_line_cmd"
bind -T copy-mode-vi TripleClick1Pane "$copy_line_cmd"
bind -n              TripleClick1Pane "$n_copy_line_cmd"

# map RMB to paste
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$($paste_cmd)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

# map ctrl+c to work as y
# bind -T copy-mode    C-c send -X "$copy_action" "$copy_cmd"
# bind -T copy-mode-vi C-c send -X "$copy_action" "$copy_cmd"

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '/usr/share/tmux-plugin-manager/tpm'
